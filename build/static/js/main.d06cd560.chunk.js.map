{"version":3,"sources":["components/Navigation/Navigation.js","components/Sidenav/Sidenav.js","components/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","fixed","Brand","href","className","Nav","NavDropdown","title","style","display","src","alt","Item","Sidenav","icon","hoverIcon","text","map","item","index","backgroundImage","Dashboard","useState","startDate","Date","endDate","addDays","key","state","setState","showDatePicker","setShowDatePicker","monthNames","Container","overflow","to","Button","Row","number","Col","xs","sm","margin","padding","InputGroup","FormControl","placeholder","aria-label","paddingRight","backgroundRepeat","backgroundPosition","cursor","minWidth","onClick","toggleDate","value","getDate","getMonth","getFullYear","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","options","fontSize","legend","position","Modal","dialogClassName","show","onHide","Header","closeButton","Title","Body","onChange","selection","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06cd560.chunk.js","sourcesContent":["import {Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport React from 'react';\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <div>\n      <Navbar fixed=\"top\">\n        <Navbar.Brand href=\"#\" className=\"text-center\">\n          <span className=\"primary-color\">\n            Logo Here\n          </span>\n        </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n\n            </Nav>\n            <div className=\"justify-content-end\">\n              <NavDropdown title={\n                <div className=\"navbar-user\" style={{display:\"inline-block\"}}>\n                    <div>\n                      <img src=\"../images/avatar.png\" alt=\"Avatar\" />  \n                    </div>\n                    <div>\n                      <p className=\"username\">Anthony Johnson</p>\n                      <p className=\"user-email\">Dummy Design.com</p>\n                    </div>\n                </div>}>\n                <div>\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\n                  <NavDropdown.Item>Logout</NavDropdown.Item>\n                </div> \n              </NavDropdown>\n              </div>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\r\nimport './Sidenav.css';\r\n\r\nfunction Sidenav() {\r\n\r\nconst navItems = [\r\n    {\r\n        icon : \"../images/icons/monitor.png\",\r\n        hoverIcon : \"../images/icons/monitor-overlay.png\",\r\n        text : \"Menu Option 1\"\r\n    },\r\n    {\r\n        icon : \"../images/icons/icon2.png\",\r\n        hoverIcon : \"../images/icons/icon2-overlay.png\",\r\n        text : \"Menu Option 2\"\r\n    },\r\n    {\r\n        icon : \"../images/icons/library.png\",\r\n        hoverIcon : \"../images/icons/library.png\",\r\n        text : \"Menu Option 3\"\r\n    },\r\n    {\r\n        icon : \"../images/icons/icon4.png\",\r\n        hoverIcon : \"../images/icons/icon4-overlay.png\",\r\n        text : \"Menu Option 4\"\r\n    },\r\n    {\r\n        icon : \"../images/icons/icon5.png\",\r\n        hoverIcon : \"../images/icons/icon5-overlay.png\",\r\n        text : \"Menu Option 5\"\r\n    },\r\n    {\r\n        icon : \"../images/icons/icon6.png\",\r\n        hoverIcon : \"../images/icons/icon6-overlay.png\",\r\n        text : \"Menu Option 6\"\r\n    }\r\n]\r\n\r\n    return(\r\n        <div className=\"sidenav\">\r\n            <ul>\r\n                {\r\n                    navItems.map((item, index) => {\r\n                        return(\r\n                            <li key={index} className={`icon${index} sidenav-item`} style={{backgroundImage: `url(${item.icon})`}}>\r\n                                {item.text}\r\n                                <span className=\"arrow\" style={{backgroundImage:\"url('../images/icons/arrow.png')\"}}></span>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"sidenav-bottom-elements\">\r\n                <ul >\r\n                    <li className=\"sidenav-item icon7\" style={{backgroundImage: \"url('../images/icons/diamond.png')\"}}>\r\n                        Menu Option 7\r\n                        <span className=\"arrow\" style={{backgroundImage:\"url('../images/icons/arrow.png')\"}}></span>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"settings\" style={{backgroundImage:\"url('../images/icons/settings.png')\"}}>\r\n                    <span>Settings</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidenav;","import { Row, Col, Container, InputGroup, FormControl, Modal } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport { addDays } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport {Line} from 'react-chartjs-2';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n\r\n    const [state, setState] = useState([\r\n        {\r\n          startDate: new Date(),\r\n          endDate: addDays(new Date(), 7),\r\n          key: 'selection'\r\n        }\r\n      ]);\r\n\r\n    const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n    const monthNames = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    const stats = [\r\n        {\r\n            icon : \"../images/icons/stat1.png\",\r\n            number : \"245/500\",\r\n            text : \"ATTRIBUTE 1\"\r\n        },\r\n        {\r\n            icon : \"../images/icons/stat2.png\",\r\n            number : \"120\",\r\n            text : \"ATTRIBUTE 2\"\r\n        },\r\n        {\r\n            icon : \"../images/icons/stat3.png\",\r\n            number : \"125\",\r\n            text : \"ATTRIBUTE 3\"\r\n        },\r\n        {\r\n            icon : \"../images/icons/stat4.png\",\r\n            number : \"0\",\r\n            text : \"ATTRIBUTE 4\"\r\n        },\r\n    ]\r\n    const chart = {\r\n        labels: ['January', 'February', 'March',\r\n                 'April', 'May'],\r\n        datasets: [\r\n          {\r\n            label: 'Attribute 1',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: 'rgba(75,192,192,1)',\r\n            borderColor: '#32d141',\r\n            borderWidth: 2,\r\n            data: [180, 260, 430, 220, 500]\r\n          },\r\n          {\r\n            label: 'Attribute 2',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: 'rgba(75,192,192,1)',\r\n            borderColor: '#266ae6',\r\n            borderWidth: 2,\r\n            data: [210, 170, 190, 210, 185]\r\n          }\r\n        ]\r\n      }\r\n\r\n    return(\r\n        <div className=\"dashboard-wrapper\">\r\n            <Container>\r\n                <div style={{overflow:\"hidden\"}}>\r\n                <div className=\"pull-right\">\r\n                    <Link to=\"/\">\r\n                        <Button className=\"upgrade-button\">\r\n                            Upgrade\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                </div>\r\n                <div className=\"dashboard-top-row\">\r\n                    <Row>\r\n                        {\r\n                            stats.map((item, index) => {\r\n                                return(\r\n                                    <Col xs={6} sm={3} key={index}>\r\n                                        <div className=\"top-row-grid\">\r\n                                            <Row style={{margin: 0}}>\r\n                                                <Col xs={5} style={{padding:\"0\"}}>\r\n                                                    <div className=\"stat-item-icon\" style={{backgroundImage: `url(${item.icon})`}}>\r\n            \r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={7} style={{padding:\"0\"}}>\r\n                                                    <div className=\"stat-item-text text-center\">\r\n                                                        <p className=\"stat-number\">\r\n                                                            {item.number}\r\n                                                        </p>\r\n                                                        <p className=\"stat-text\">\r\n                                                            {item.text}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </div>\r\n                <div className=\"graph-wrapper\">\r\n                    <div className=\"pull-right\">\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            placeholder=\"Pick a date\"\r\n                            aria-label=\"Pick a date\"\r\n                            style={{paddingRight: \"30px\",\r\n                                backgroundImage: `url('../images/icons/calendar.png')`,\r\n                                backgroundRepeat: \"no-repeat\",\r\n                                backgroundPosition: \"right 5px center\",\r\n                                cursor: \"pointer\",\r\n                                minWidth: \"235px\"\r\n                            }}\r\n                            onClick={() => setShowDatePicker(toggleDate => !toggleDate)}\r\n                            value={\r\n                                state[0].startDate.getDate()+\" \"+monthNames[state[0].startDate.getMonth()]+\" \"+state[0].startDate.getFullYear()+\" - \"+\r\n                                state[0].endDate.getDate()+\" \"+monthNames[state[0].endDate.getMonth()]+\" \"+state[0].endDate.getFullYear()}\r\n                            />\r\n                            {/* <InputGroup.Append style={{width:\"20px\"}}>\r\n                                <img src=\"../images/icons/calendar.png\" alt=\"Calendar\" />\r\n                            </InputGroup.Append> */}\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div>\r\n                        <Line \r\n                         data={chart}\r\n                         options={{\r\n                           title:{\r\n                             display:true,\r\n                             text:'Analytics',\r\n                             fontSize:20\r\n                           },\r\n                           legend:{\r\n                             display:true,\r\n                             position:'right'\r\n                           }\r\n                         }} />\r\n                    </div>\r\n                    <Modal dialogClassName=\"modal-75w\" show={showDatePicker} onHide={() => setShowDatePicker(false)}>\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>Pick a date range</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <DateRangePicker\r\n                                onChange={item => setState([item.selection])}\r\n                                showSelectionPreview={true}\r\n                                moveRangeOnFirstSelection={false}\r\n                                months={2}\r\n                                ranges={state}\r\n                                direction=\"horizontal\"\r\n                            />\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Sidenav from './components/Sidenav/Sidenav';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Navigation />\n      <div className=\"page-adjust\">\n        <Sidenav />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}